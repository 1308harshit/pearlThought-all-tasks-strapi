name: Deploy Strapi App to ECS (Blue/Green)

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # # Optional: Build Docker image (if you want to re-enable this step)
      # - name: Build Docker image
      #   run: |
      #     docker build -t strapi-app:latest .
      #     docker tag strapi-app:latest ${{ secrets.ECR_REPOSITORY_URI }}:latest

      # # Optional: Push Docker image to ECR (if you want to re-enable this step)
      # - name: Push Docker image to ECR
      #   run: |
          # docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

      - name: Register ECS Task Definition
        id: taskdef
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "::set-output name=task_definition_arn::$TASK_DEF_ARN"

      - name: Deploy to ECS using CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name strapi-app \
            --deployment-group-name strapi-dg \
            --revision "revisionType=S3,bucket=my-bucket,key=my-key" \
            --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
            --description "Deploying new version"

# name: Deploy Strapi App to ECS (Blue/Green)

# on:
#   workflow_dispatch:

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Log in to Amazon ECR
#         uses: aws-actions/amazon-ecr-login@v1

#       # - name: Build Docker image
#       #   run: |
#       #     docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:latest .

#       # - name: Push Docker image to ECR
#       #   run: |
#       #     docker push 816069168735.dkr.ecr.us-east-1.amazonaws.com/strapi-app-image:latest

#       - name: Register ECS Task Definition
#         id: taskdef
#         run: |
#           TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)
#           echo "::set-output name=task_definition_arn::$TASK_DEF_ARN"

#       - name: Update Task Definition in appspec.yaml
#         run: |
#           sed -i "s|TaskDefinition: \"\"|TaskDefinition: \"${{ steps.taskdef.outputs.task_definition_arn }}\"|g" appspec.yaml

#       - name: Deploy to ECS using CodeDeploy
#         run: |
#           aws deploy create-deployment \
#             --application-name strapi-app \
#             --deployment-group-name strapi-dg \
#             --revision file://appspec.yaml \
#             --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
#             --description "Deploying new version"
