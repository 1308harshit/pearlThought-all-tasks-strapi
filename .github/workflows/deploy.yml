name: Deploy Strapi App to ECS (Blue/Green)

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 816069168735.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: strapi-app-image

jobs:
  deploy:
    name: Build and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:latest .
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

      - name: Download existing ECS task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition strapi-task \
            --query taskDefinition \
            --output json > task-def.json

      - name: Update image in task definition
        run: |
          jq '.containerDefinitions[0].image = "${{ secrets.ECR_REPOSITORY_URI }}:latest"' task-def.json > temp-task-def.json
          jq 'del(
            .taskDefinitionArn,
            .revision,
            .status,
            .requiresAttributes,
            .compatibilities,
            .registeredAt,
            .registeredBy
          )' temp-task-def.json > new-task-def.json

      - name: Register new ECS task definition revision
        id: register_task
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: |
          cd terraform10
          terraform init

      - name: Generate Terraform Plan
        run: |
          cd terraform10
          terraform plan

      - name: Apply Terraform to deploy ECS and CodeDeploy
        run: |
          cd terraform10
          terraform apply -auto-approve -var "image_uri=${{ secrets.ECR_REPOSITORY_URI }}:latest"

      - name: Create AppSpec file
        run: |
          cat <<EOF > appspec.json
          {
            "version": 1,
            "Resources": [
              {
                "TargetService": {
                  "Type": "AWS::ECS::Service",
                  "Properties": {
                    "TaskDefinition": "${{ env.TASK_DEF_ARN }}",
                    "LoadBalancerInfo": {
                      "ContainerName": "strapi",
                      "ContainerPort": 1337
                    }
                  }
                }
              }
            ]
          }
          EOF

      - name: Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name StrapiCodeDeployApp \
            --deployment-group-name strapi \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --revision "revisionType=AppSpecContent,appSpecContent={content=$(cat appspec.json | jq -Rs .)}" \
            --description "GitHub Actions Deployment - Blue/Green"
